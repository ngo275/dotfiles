set nocompatible
filetype off

if has('vim_starting')
 set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))


"============================================================
" Edit
"============================================================
NeoBundle      'tpope/vim-commentary.git' " comment1
NeoBundle      'scrooloose/nerdcommenter' " comment2
NeoBundle       'junegunn/vim-easy-align' " align1
NeoBundle                         'Align' " align2
NeoBundle            'tpope/vim-surround' " text surround
NeoBundle        'kana/vim-operator-user'
NeoBundle     'kana/vim-operator-replace'
NeoBundle            'kana/vim-niceblock'


"============================================================
" Completion
"============================================================
NeoBundle          'Shougo/neocomplcache' " auto complete
"NeoBundle            'Shougo/neosnippet'
NeoBundle              'c9s/perlomni.vim'


"============================================================
" Searching/Moving
"============================================================
NeoBundle                     'smartword' " enables cursor-movement more intelligent
NeoBundle            'rhysd/clever-f.vim' " improve f jump
NeoBundle         'tyru/open-browser.vim'


"============================================================
" Programming
"============================================================
NeoBundle           'thinca/vim-quickrun'
NeoBundle                'thinca/vim-ref'
NeoBundle                     'Pydiction' " auto complete for python
NeoBundle                   'taglist.vim' " shows tag & method list
NeoBundle             'wesleyche/SrcExpl'
NeoBundle              't9md/vim-quickhl'

"============================================================
" Syntax
"============================================================
NeoBundle             'JavaScript-syntax' " JavaScript
NeoBundle        'hail2u/vim-css3-syntax' " css3
NeoBundle                     'html5.vim' " html5
NeoBundle                        'jQuery' " jQuery
NeoBundle                 'jceb/vim-hier'
NeoBundle                     'nginx.vim' " nginx conf
NeoBundle                       'php.vim' " PHP
" NeoBundle       'plasticboy/vim-markdown' " markdown
" NeoBundle       'tpope/vim-markdown' " markdown
NeoBundle                    'python.vim' " Python
NeoBundle          'scrooloose/syntastic' " syntax checking plugins exist for eruby, haml, html, javascript, php, python, ruby and sass.


"============================================================
" Explorer
"============================================================
NeoBundle           'scrooloose/nerdtree' " tree explorer
NeoBundle             'tpope/vim-vinegar' " drives tree explorer


"============================================================
" Utility
"============================================================
NeoBundle        'Lokaltog/vim-powerline' " updates status line
NeoBundle                       'cecutil' " util
NeoBundle            'tpope/vim-fugitive' " controls git from vim
NeoBundle 'banyan/recognize_charcode.vim'


"============================================================
" ColorScheme
"============================================================
NeoBundle                        'inkpot'
NeoBundle       'nanotech/jellybeans.vim'
NeoBundle                'tomasr/molokai'


"============================================================
" Unite
"============================================================
NeoBundle              'Shougo/unite.vim'
NeoBundle        'h1mesuke/unite-outline'


"============================================================
" Vimproc
"============================================================
NeoBundle 'Shougo/vimproc', {
    \ 'build' : {
    \     'windows' : 'echo "Sorry, cannot update vimproc binary file in Windows."',
    \     'cygwin' : 'make -f make_cygwin.mak',
    \     'mac' : 'make -f make_mac.mak',
    \     'unix' : 'make -f make_unix.mak',
    \    },
    \ }


filetype plugin indent on     " Required!
if neobundle#exists_not_installed_bundles()
 echomsg 'Not installed bundles : ' .
       \ string(neobundle#get_not_installed_bundle_names())
 echomsg 'Please execute ":NeoBundleInstall" command.'
endif
